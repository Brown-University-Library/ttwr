# -*- coding: utf-8 -*-
# Generated by Django 1.11.23 on 2019-08-30 11:18
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('rome_app', '0007_shop_slug'),
    ]

    operations = [
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=191, unique=True)),
                ('title', models.CharField(max_length=254)),
                ('summary', models.TextField()),
                ('text', models.TextField()),
                ('document_file', models.FileField(blank=True, upload_to='')),
                ('document_link', models.URLField()),
                ('consagra', models.BooleanField()),
                ('people', models.ManyToManyField(blank=True, help_text='List of people associated with this essay.', to='rome_app.Biography')),
            ],
        ),
        migrations.AddField(
            model_name='essay',
            name='shops',
            field=models.ManyToManyField(blank=True, help_text='List of shops associated with this essay.', to='rome_app.Shop'),
        ),
        migrations.AddField(
            model_name='shop',
            name='end_date',
            field=models.CharField(blank=True, help_text='Optional: enter death date as yyyy-mm-dd', max_length=25, null=True),
        ),
        migrations.AddField(
            model_name='shop',
            name='family',
            field=models.CharField(blank=True, help_text='Enter Family associated with shop', max_length=254, null=True),
        ),
        migrations.AddField(
            model_name='shop',
            name='start_date',
            field=models.CharField(blank=True, help_text='Optional: enter birth date as yyyy-mm-dd (for sorting and filtering)', max_length=25, null=True),
        ),
        migrations.AddField(
            model_name='shop',
            name='documents',
            field=models.ManyToManyField(blank=True, help_text='List of documents associated with this shop.', to='rome_app.Document'),
        ),
    ]
